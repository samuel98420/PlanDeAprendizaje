{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080'; // Ajusta si tu backend usa otro puerto\n  }\n  // CRUD de Tasks\n  getTasks() {\n    return this.http.get(`${this.apiUrl}/tasks`);\n  }\n  createTask(task) {\n    return this.http.post(`${this.apiUrl}/tasks`, task);\n  }\n  updateTask(id, task) {\n    return this.http.put(`${this.apiUrl}/tasks/${id}`, task);\n  }\n  deleteTask(id) {\n    return this.http.delete(`${this.apiUrl}/tasks/${id}`);\n  }\n  static {\n    this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,uBAAuB,CAAC,CAAC;EAEF;EAExC;EACAC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,QAAQ,CAAC;EAC9C;EAEAC,UAAU,CAACC,IAAS;IAClB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,QAAQ,EAAEE,IAAI,CAAC;EACrD;EAEAE,UAAU,CAACC,EAAU,EAAEH,IAAS;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACN,MAAM,UAAUK,EAAE,EAAE,EAAEH,IAAI,CAAC;EAC1D;EAEAK,UAAU,CAACF,EAAU;IACnB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACR,MAAM,UAAUK,EAAE,EAAE,CAAC;EACvD;;;uBApBWV,UAAU;IAAA;EAAA;;;aAAVA,UAAU;MAAAc,SAAVd,UAAU;MAAAe,YAFT;IAAM;EAAA","names":["ApiService","constructor","http","getTasks","get","apiUrl","createTask","task","post","updateTask","id","put","deleteTask","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookair2020/Documents/PlanDeAprendizaje-main/frontend/app/services/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = 'http://localhost:8080'; // Ajusta si tu backend usa otro puerto\n\n  constructor(private http: HttpClient) { }\n\n  // CRUD de Tasks\n  getTasks(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/tasks`);\n  }\n\n  createTask(task: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/tasks`, task);\n  }\n\n  updateTask(id: number, task: any): Observable<any> {\n    return this.http.put(`${this.apiUrl}/tasks/${id}`, task);\n  }\n\n  deleteTask(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/tasks/${id}`);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}