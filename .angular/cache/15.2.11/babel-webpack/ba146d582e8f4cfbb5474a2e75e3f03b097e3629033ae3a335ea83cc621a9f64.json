{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nimport * as i2 from \"./product.service\";\nimport * as i3 from \"./services/api.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"./navigation/navigation.component\";\nfunction AppComponent_div_2_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", task_r3.title, \" - \", task_r3.description, \" [\", task_r3.completed ? \"\\u2705\" : \"\\u274C\", \"] \");\n  }\n}\nfunction AppComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Tareas desde Backend Go\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, AppComponent_div_2_li_4_Template, 2, 3, \"li\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.tasks);\n  }\n}\nfunction AppComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"No hay tareas cargadas o el servidor no responde\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class AppComponent {\n  constructor(messageService, productService, apiService // Inyecta el nuevo servicio\n  ) {\n    this.messageService = messageService;\n    this.productService = productService;\n    this.apiService = apiService;\n    this.message = '';\n    this.title = 'Gestión de Productos';\n    this.tasks = []; // Nueva propiedad para almacenar tareas\n  }\n\n  ngOnInit() {\n    this.messageService.currentMessage.subscribe(message => this.message = message);\n    // Cargar tareas al iniciar\n    this.loadTasks();\n  }\n  loadTasks() {\n    this.apiService.getTasks().subscribe({\n      next: tasks => this.tasks = tasks,\n      error: err => console.error('Error cargando tareas:', err)\n    });\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i3.ApiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 4,\n      vars: 2,\n      consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-navigation\")(1, \"router-outlet\");\n          i0.ɵɵtemplate(2, AppComponent_div_2_Template, 5, 1, \"div\", 0);\n          i0.ɵɵtemplate(3, AppComponent_div_3_Template, 3, 0, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.tasks.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.tasks.length === 0);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i5.RouterOutlet, i6.NavigationComponent],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;;;;IAKMA,0BAA+B;IAC7BA,YAEF;IAAAA,iBAAK;;;;IAFHA,eAEF;IAFEA,0HAEF;;;;;IANNA,2BAA8B;IACtBA,uCAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IACFA,iEAGK;IACPA,iBAAK;;;;IAJkBA,eAAQ;IAARA,sCAAQ;;;;;IAOjCA,2BAAgC;IAC3BA,gEAAgD;IAAAA,iBAAI;;;ACH3D,OAAM,MAAOC,YAAY;EAKvBC,YACUC,cAA8B,EAC/BC,cAA8B,EAC7BC,UAAsB,CAAC;EAAA;IAFvB,mBAAc,GAAdF,cAAc;IACf,mBAAc,GAAdC,cAAc;IACb,eAAU,GAAVC,UAAU;IAPpB,YAAO,GAAW,EAAE;IACpB,UAAK,GAAW,sBAAsB;IACtC,UAAK,GAAU,EAAE,CAAC,CAAC;EAMhB;;EAEHC,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,cAAc,CAACC,SAAS,CACzCC,OAAe,IAAK,IAAI,CAACA,OAAO,GAAGA,OAAO,CAC5C;IAED;IACA,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,IAAI,CAACL,UAAU,CAACM,QAAQ,EAAE,CAACH,SAAS,CAAC;MACnCI,IAAI,EAAGC,KAAK,IAAK,IAAI,CAACA,KAAK,GAAGA,KAAK;MACnCC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,wBAAwB,EAAEC,GAAG;KAC5D,CAAC;EACJ;;;uBAzBWd,YAAY;IAAA;EAAA;;;YAAZA,YAAY;MAAAgB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDVzBrB,iCAAiC;UAEjCA,6DAQQ;UAENA,6DAEM;;;UAZFA,eAAsB;UAAtBA,2CAAsB;UAUpBA,eAAwB;UAAxBA,6CAAwB","names":["i0","AppComponent","constructor","messageService","productService","apiService","ngOnInit","currentMessage","subscribe","message","loadTasks","getTasks","next","tasks","error","err","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbookair2020/Documents/PlanDeAprendizaje-main/frontend/app/app.component.html","/Users/macbookair2020/Documents/PlanDeAprendizaje-main/frontend/app/app.component.ts"],"sourcesContent":["<app-navigation></app-navigation> \n<router-outlet></router-outlet>\n<div *ngIf=\"tasks.length > 0\">\n    <h3>Tareas desde Backend Go</h3>\n    <ul>\n      <li *ngFor=\"let task of tasks\">\n        {{task.title}} - {{task.description}} \n        [{{task.completed ? '✅' : '❌'}}]\n      </li>\n    </ul>\n  </div>\n  \n  <div *ngIf=\"tasks.length === 0\">\n    <p>No hay tareas cargadas o el servidor no responde</p>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './services/api.service'; // Asegúrate que la ruta es correcta\nimport { MessageService } from './message.service';\nimport { ProductService } from './product.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  message: string = '';\n  title: string = 'Gestión de Productos';\n  tasks: any[] = []; // Nueva propiedad para almacenar tareas\n\n  constructor(\n    private messageService: MessageService,\n    public productService: ProductService,\n    private apiService: ApiService // Inyecta el nuevo servicio\n  ) {}\n\n  ngOnInit() {\n    this.messageService.currentMessage.subscribe(\n      (message: string) => this.message = message\n    );\n    \n    // Cargar tareas al iniciar\n    this.loadTasks();\n  }\n\n  loadTasks() {\n    this.apiService.getTasks().subscribe({\n      next: (tasks) => this.tasks = tasks,\n      error: (err) => console.error('Error cargando tareas:', err)\n    });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}